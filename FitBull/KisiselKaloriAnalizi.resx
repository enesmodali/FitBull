<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAATAAAAEuCAYAAAAJJ04YAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAFyhJREFUeF7t3WmUVOWdx/G8mkw0IkYNaBSJigoKKmBDszTQDU1rVBD3HbcYUVHH
        ROXgLtGouGI0GONuVFSI0VEcd42CkSDEDUUTjAvIKsTMOc6ZOc/c39P9lLeqnmq6oau6/l3fF5/TRdVz
        b1W1XV+fe+vWre+sWbvOAYBFmYBt+m/9AMAEAgbALAIGwKysgK3+am10EACUIzXLB0wXCBgAS0K3CBgA
        cwgYALOyArZqzVfRQQBQjtQsHzBdIGAALAnd8gFbuXpNdBAAlCM1ywdMFwgYAEtCt5oCtjo6CADKkZqV
        CdiKVQQMgB1qlg+YLhAwAJaEbvmALV+5KjoIAMqRmkXAAJhEwACYRcAAmJUK2CoCBsCUxoCtct/RheUr
        V0YHAUA5UrPULh+wL1cQMAB2qFkEDIBJBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZ
        BAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZ
        BAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZ
        BAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZ
        BAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZ
        BAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZ
        BAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZBAyAWQQMgFkEDIBZ
        BKyDGDzgaC92G9BREbAO4oF7/+gmnHp59DagoyJgHQQBQyUiYB0EAUMlImAdBAFDJSJgRbT75lVu3DbV
        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
        S4MQMK3z44//4V/smvkcd/QFmfWEn+sLmK5PXzfz0f/yMzZdfiy5HG5vTcA0a3r+ubl+FqVNV83QdPua
        NWvd4Yf8hz/jRSxgei7a4T/hp5f5zXJdr01cnU9MYzUDI2DFUzEB0xHvCoM292K3lyN96W0xAqZ9YI/P
        et7vv3n15Xlu3JiJfl+XNiEfmTHb33bTDff5sVV9D/Mzmhuvu8eHTtcpPuF2/QwzrhCOsUkMbkjG63IQ
        IqjLuj9teml9p5zYeF16fdq3lbtMELtOIZw181n/fH7320czm3IKSRiTfpyFLus5apP5kYdnu9/c+pC/
        TjO6Z5JZqTYhFbv0u5ONO/G/vY/Jk27y+70O2G+CeyGJ4azHnnVPPfmyH6fTZYdYo+1UTMD0eUPFwKKu
        yUwv9pzSWrsJ2VKvvPymuyyZ9dyVvFDDDuu2oGjkzq6A1qqYgO3WqcpN6D7ElJ91H5w5MHZ9ihWwPj3H
        +s1CbUL1aHq3cWPphIp6h7Ajn2gPpVExAevoihUwoJwRsA6CgKESEbAOgoChEhGwDoKAoRIRsA5CO8TZ
        KY5KQ8AAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhF
        wACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhF
        wACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhF
        wACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhF
        wACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhF
        wACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhF
        wACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhF
        wACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhFwACYRcAAmEXAAJhF
        wACYRcAAmJUVsOUrV/orli1f4ZZ+udx9sexL9/nSZd5nXyz91udfuE8BoEjUmHRzQofUJLVJjWqMl6xy
        /w/L7TM0V9s96QAAAABJRU5ErkJggg==
</value>
  </data>
</root>